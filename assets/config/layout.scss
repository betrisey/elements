@charset 'utf-8';

// Retrieve content coloumn width
@function col-width($breakpoint, $columns) {
  @return map-get($container-max-widths, $breakpoint)  * $columns / $grid-columns;
}

//
// GRID MANAGEMENT
//
// Wrap everything in this class (must be taking the full viewport width) to enable
// CSS Grid for immediate children.
//
// All items that must not take the "content" area into account have the class
// "container-full". Inside those items, use a regular Bootstrap layout as you
// would in a normal setup.
//

.container-grid {
  display: grid;
  grid-template-rows: auto;
  grid-column-gap: $grid-gutter-width;
  grid-template-columns:
    [full-start] 1fr
    [content-start] minmax(min-content, #{col-width(sm, 12)})
    [content-end] 1fr
    [full-end];

  @include media-breakpoint-down(sm) {
    grid-gap: $grid-gutter-width;
  }

  @include media-breakpoint-up(md) {
    grid-template-columns:
      [full-start] 1fr
      [content-start] minmax(min-content, #{col-width(md, 10)})
      [content-end] 1fr
      [full-end];
  }

  @include media-breakpoint-up(lg) {
    grid-template-columns:
      [full-start] 1fr
      [content-start] minmax(min-content, #{col-width(lg, 8)})
      [content-end] 1fr
      [full-end];
  }

  @include media-breakpoint-up(xl) {
    grid-template-columns:
      [full-start] 1fr
      [content-start] minmax(min-content, #{col-width(xl, 6)})
      [content-end] 1fr
      [full-end];
  }

  > * {
    grid-column: content;
  }

  .container-full {
    grid-column: full;
  }
}

@include ie11('.container-grid') {
  display: block;
}

@include ie11('.container-grid > *') {
  max-width: col-width(lg, 10);
  margin: 0 auto;
}

@include media-breakpoint-up(lg) {
  @include ie11('.container-grid > *') {
    max-width: col-width(lg, 8);
  }
}

@include media-breakpoint-up(xl) {
  @include ie11('.container-grid > *') {
    max-width: col-width(xl, 6);
  }
}

@include ie11('.container-grid .container-full') {
  max-width: 100%;
  width: 100%;
}
